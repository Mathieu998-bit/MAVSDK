// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to the proto files
// (see
// https://github.com/mavlink/MAVSDK-Proto/blob/master/protos/component_information_server/component_information_server.proto)

#include <iomanip>

#include "component_information_server_impl.h"
#include "plugins/component_information_server/component_information_server.h"

namespace mavsdk {

ComponentInformationServer::ComponentInformationServer(System& system) :
    PluginBase(),
    _impl{std::make_unique<ComponentInformationServerImpl>(system)}
{}

ComponentInformationServer::ComponentInformationServer(std::shared_ptr<System> system) :
    PluginBase(),
    _impl{std::make_unique<ComponentInformationServerImpl>(system)}
{}

ComponentInformationServer::~ComponentInformationServer() {}

ComponentInformationServer::Result
ComponentInformationServer::provide_peripheral_file(std::string path) const
{
    return _impl->provide_peripheral_file(path);
}

std::ostream& operator<<(std::ostream& str, ComponentInformationServer::Result const& result)
{
    switch (result) {
        case ComponentInformationServer::Result::Unknown:
            return str << "Unknown";
        case ComponentInformationServer::Result::Success:
            return str << "Success";
        case ComponentInformationServer::Result::NotFound:
            return str << "Not Found";
        case ComponentInformationServer::Result::OpenFailure:
            return str << "Open Failure";
        case ComponentInformationServer::Result::ReadFailure:
            return str << "Read Failure";
        case ComponentInformationServer::Result::FailedJsonParsing:
            return str << "Failed Json Parsing";
        case ComponentInformationServer::Result::FailedJsonSchema:
            return str << "Failed Json Schema";
        default:
            return str << "Unknown";
    }
}

} // namespace mavsdk